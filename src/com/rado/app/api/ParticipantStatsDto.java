package com.rado.app.api;

import org.json.simple.JSONObject;

public class ParticipantStatsDto
{
	public Object physicalDamageDealt;
	public Object neutralMinionsKilledTeamJungle;
	public Object magicDamageDealt;
	public Object totalPlayerScore;
	public Object deaths;
	public Object win;
	public Object neutralMinionsKilledEnemyJungle;
	public Object altarsCaptured;
	public Object largestCriticalStrike;
	public Object totalDamageDealt;
	public Object magicDamageDealtToChampions;
	public Object visionWardsBoughtInGame;
	public Object damageDealtToObjectives;
	public Object largestKillingSpree;
	public Object item1;
	public Object quadraKills;
	public Object teamObjective;
	public Object totalTimeCrowdControlDealt;
	public Object ObjectestTimeSpentLiving;
	public Object wardsKilled;
	public Object firstTowerAssist;
	public Object firstTowerKill;
	public Object item2;
	public Object item3;
	public Object item0;
	public Object firstBloodAssist;
	public Object visionScore;
	public Object wardsPlaced;
	public Object item4;
	public Object item5;
	public Object item6;
	public Object turretKills;
	public Object tripleKills;
	public Object damageSelfMitigated;
	public Object champLevel;
	public Object nodeNeutralizeAssist;
	public Object firstInhibitorKill;
	public Object goldEarned;
	public Object magicalDamageTaken;
	public Object kills;
	public Object doubleKills;
	public Object nodeCaptureAssist;
	public Object firstInhibitorAssist;
	public Object assists;
	public Object unrealKills;
	public Object neutralMinionsKilled;
	public Object objectivePlayerScore;
	public Object combatPlayerScore;
	public Object damageDealtToTurrets;
	public Object altarsNeutralized;
	public Object physicalDamageDealtToChampions;
	public Object goldSpent;
	public Object trueDamageDealt;
	public Object trueDamageDealtToChampions;
	public Object participantId;
	public Object pentaKills;
	public Object totalHeal;
	public Object totalMinionsKilled;
	public Object firstBloodKill;
	public Object nodeCapture;
	public Object largestMultiKill;
	public Object sightWardsBoughtInGame;
	public Object totalDamageDealtToChampions;
	public Object totalUnitsHealed;
	public Object inhibitorKills;
	public Object totalScoreRank;
	public Object totalDamageTaken;
	public Object killingSprees;
	public Object timeCCingOthers;
	public Object physicalDamageTaken;

	public ParticipantStatsDto() { }

	public ParticipantStatsDto(JSONObject stats)
	{
		this.physicalDamageDealt = stats.get("physicalDamageDealt");
		this.neutralMinionsKilledTeamJungle = stats.get("neutralMinionsKilledTeamJungle");
		this.magicDamageDealt = stats.get("magicDamageDealt");
		this.totalPlayerScore = stats.get("totalPlayerScore");
		this.deaths = stats.get("deaths");
		this.win = stats.get("win");
		this.neutralMinionsKilledEnemyJungle = stats.get("neutralMinionsKilledEnemyJungle");
		this.altarsCaptured = stats.get("altarsCaptured");
		this.largestCriticalStrike = stats.get("largestCriticalStrike");
		this.totalDamageDealt = stats.get("totalDamageDealt");
		this.magicDamageDealtToChampions = stats.get("magicDamageDealtToChampions");
		this.visionWardsBoughtInGame = stats.get("visionWardsBoughtInGame");
		this.damageDealtToObjectives = stats.get("damageDealtToObjectives");
		this.largestKillingSpree = stats.get("largestKillingSpree");
		this.item1 = stats.get("item1");
		this.quadraKills = stats.get("quadraKills");
		this.teamObjective = stats.get("teamObjective");
		this.totalTimeCrowdControlDealt = stats.get("totalTimeCrowdControlDealt");
		this.ObjectestTimeSpentLiving = stats.get("ObjectestTimeSpentLiving");
		this.wardsKilled = stats.get("wardsKilled");
		this.firstTowerAssist = stats.get("firstTowerAssist");
		this.firstTowerKill = stats.get("firstTowerKill");
		this.item2 = stats.get("item2");
		this.item3 = stats.get("item3");
		this.item0 = stats.get("item0");
		this.firstBloodAssist = stats.get("firstBloodAssist");
		this.visionScore = stats.get("visionScore");
		this.wardsPlaced = stats.get("wardsPlaced");
		this.item4 = stats.get("item4");
		this.item5 = stats.get("item5");
		this.item6 = stats.get("item6");
		this.turretKills = stats.get("");
		this.tripleKills = stats.get("tripleKills");
		this.damageSelfMitigated = stats.get("damageSelfMitigated");
		this.champLevel = stats.get("champLevel");
		this.nodeNeutralizeAssist = stats.get("nodeNeutralizeAssist");
		this.firstInhibitorKill = stats.get("firstInhibitorKill");
		this.goldEarned = stats.get("goldEarned");
		this.magicalDamageTaken = stats.get("magicalDamageTaken");
		this.kills = stats.get("kills");
		this.doubleKills = stats.get("doubleKills");
		this.nodeCaptureAssist = stats.get("nodeCaptureAssist");
		this.firstInhibitorAssist = stats.get("firstInhibitorAssist");
		this.assists = stats.get("assists");
		this.unrealKills = stats.get("unrealKills");
		this.neutralMinionsKilled = stats.get("neutralMinionsKilled");
		this.objectivePlayerScore = stats.get("objectivePlayerScore");
		this.combatPlayerScore = stats.get("combatPlayerScore");
		this.damageDealtToTurrets = stats.get("damageDealtToTurrets");
		this.altarsNeutralized = stats.get("altarsNeutralized");
		this.physicalDamageDealtToChampions = stats.get("physicalDamageDealtToChampions");
		this.goldSpent = stats.get("goldSpent");
		this.trueDamageDealt = stats.get("trueDamageDealt");
		this.trueDamageDealtToChampions = stats.get("trueDamageDealtToChampions");
		this.participantId = stats.get("participantId");
		this.pentaKills = stats.get("pentaKills");
		this.totalHeal = stats.get("totalHeal");
		this.totalMinionsKilled = stats.get("totalMinionsKilled");
		this.firstBloodKill = stats.get("firstBloodKill");
		this.nodeCapture = stats.get("nodeCapture");
		this.largestMultiKill = stats.get("largestMultiKill");
		this.sightWardsBoughtInGame = stats.get("sightWardsBoughtInGame");
		this.totalDamageDealtToChampions = stats.get("totalDamageDealtToChampions");
		this.totalUnitsHealed = stats.get("totalUnitsHealed");
		this.inhibitorKills = stats.get("inhibitorKills");
		this.totalScoreRank = stats.get("totalScoreRank");
		this.totalDamageTaken = stats.get("totalDamageTaken");
		this.killingSprees = stats.get("killingSprees");
		this.timeCCingOthers = stats.get("timeCCingOthers");
		this.physicalDamageTaken = stats.get("physicalDamageTaken");
	}
}
